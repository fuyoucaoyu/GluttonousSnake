/* * hexagon framework - Multi-Purpose ActionScript 3 Framework. * Copyright (C) 2007 Hexagon Star Softworks *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/ FRAMEWORK_/ *            \__/  \__/ * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.soe.animatedBitmap.display{	/**	 * IAnimatedDisplayObject Interface	 * @author Sascha Balkau	 */	public interface IAnimatedDisplayObject	{		/**		 * Sets the frame rate timer object used for the animated		 * display object. This method is useful when it is desired		 * to change the framerate at a later timer.		 * 		 * @param timer The frame rate timer used for the animated		 *         display object.		 */		function setFrameRateTimer(timer:FrameRateTimer):void;				/**		 * Returns the frame rate with that the animated display object		 * is playing.		 * 		 * @return The fps value of the animated display object.		 */		function getFrameRate():int;				/**		 * Returns the current frame position of the animated display		 * object.		 * 		 * @return The current frame position.		 */		function getCurrentFrame():int;				/**		 * Returns the total amount of frames that the animated display		 * object has.		 * 		 * @return The total frame amount.		 */		function getTotalFrames():int;				/**		 * Returns whether the animated display object is playing or not.		 * 		 * @return true if the animated display object is playing, else false.		 */		function isPlaying():Boolean;				/**		 * Starts the playback of the animated display object. If the animated		 * display object is already playing while calling this method, it calls		 * stop() and then play again instantly to allow for framerate		 * changes during playback.		 */		function play():void;				/**		 * Stops the playback of the animated display object.		 */		function stop():void;				/**		 * Jumps to the specified frameNr and plays the animated		 * display object from that position. Note that the frames of an		 * animated display object start at 1.		 * 		 * @param frameNr The frame number to which to jump.		 */		function gotoAndPlay(frameNr:int):void;				/**		 * Jumps to the specified frameNr and stops the animated		 * display object at that position. Note that the frames of an		 * animated display object start at 1.		 * 		 * @param frameNr The frame number to which to jump.		 */		function gotoAndStop(frameNr:int):void;				/**		 * Moves the animation to the next of the current frame.		 * If the animated display object is playing, the playback is		 * stopped by this operation.		 */		function nextFrame():void;				/**		 * Moves the animation to the previous of the current frame.		 * If the animated display object is playing, the playback is		 * stopped by this operation.		 */		function prevFrame():void;	}}